<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{

	public function listePartenaire(){
        $connexion = $this->getEntityManager()->getConnection();

        $query="SELECT id FROM type_compte WHERE name = 'Gestionnaire'";
        $statement = $connexion->query($query);
        $res = $statement->fetch();

        $query="SELECT id FROM type_compte WHERE name = 'Admin'";
        $statement = $connexion->query($query);
        $res2 = $statement->fetch();

        $query="SELECT * FROM fos_user WHERE type_id != ".$res['id']." AND type_id != ".$res2['id'];
        $statement = $connexion->query($query);
        return $statement->fetchAll();
        
    }

    public function listeGestionnaire(){
        $connexion = $this->getEntityManager()->getConnection();

        $query="SELECT id FROM type_compte WHERE name = 'Gestionnaire'";
        $statement = $connexion->query($query);
        $res = $statement->fetch();

        $query="SELECT * FROM fos_user WHERE type_id = ".$res['id'];
        $statement = $connexion->query($query);
        return $statement->fetchAll();
        
    }

    public function getUserFromId($id){
		$connexion = $this->getEntityManager()->getConnection();

		$query="SELECT fos.id,fos.username, fos.email, fos.password, s.nom as nomStructure, c.nom, c.prenom, c.tel, c.type_id, fos.email, tc.name, c.newsletter FROM structure s, contact c, fos_user fos inner join type_compte tc on fos.type_id = tc.id where fos.id =".$id." and structure_id=s.id and contact_id=c.id";
        $statement = $connexion->query($query);
		//dump($query);
		return $statement->fetch();
		
		
    }
	
	public function getAllAbonne(){
		$connexion = $this->getEntityManager()->getConnection();
		$query="select c.nom, c.prenom, f.email from contact c 
		inner join fos_user f
		on f.contact_id = c.id
		where c.newsletter = true";
        $statement = $connexion->query($query);
		return $statement->fetchAll();
	}
	
	// Geoffrey
	public function listeGestionnaireById($id){
	 	$connexion = $this->getEntityManager()->getConnection();

        $query="SELECT fos.nomStructure, fos.nomResponsable, fos.prenomResponsable, fos.telResponsable, fos.mailResponsable, fos.nom, fos.prenom, fos.tel, fos.mail, fos.type_id, tc.name
		FROM fos_user fos
		inner join type_compte tc on fos.type_id = tc.id
		where fos.id=".$id."";
        $statement = $connexion->query($query);
        return $statement->fetch();
	}
	
	// Geoffrey
	public function modifierCompteById($id, $nomStructure, $nomDemandeur, $prenomDemandeur, $telDemandeur, $mailDemandeur, $typeCompte, $nomResponsable, $prenomResponsable, $telResponsable, $mailResponsable){
		
	 	$connexion = $this->getEntityManager()->getConnection();
		
		$query = "UPDATE fos_user
		SET nomStructure = '".$nomStructure."',
		nom = '".$nomDemandeur."',
		prenom = '".$prenomDemandeur."',
		tel = '".$telDemandeur."',
		mail = '".$mailDemandeur."',
		type_id = '".$typeCompte."',
		nomReponsable = '".$nomResponsable."',
		prenomReponsable = '".$prenomResponsable."',
		telReponsable = '".$telResponsable."',
		mailReponsable = '".$mailResponsable."',
		where id=".$id."";

        $statement = $connexion->query($query);
        return $statement->fetch();
	}
	
	public function	getContact($userConnecte)
	{
		$connexion = $this->getEntityManager()->getConnection();

        $query="select contact_id from fos_user where id=".$userConnecte."";
        $statement = $connexion->query($query);
        return $statement->fetch();
	}

	public function	listeUserFromStructure($structure)
	{
		$connexion = $this->getEntityManager()->getConnection();

        $query="SELECT * from fos_user where structure_id=".$structure."";
        $statement = $connexion->query($query);
		return $statement->fetchAll();
	}

	public function isUser($mail){
		$connexion = $this->getEntityManager()->getConnection();

		$query="SELECT email FROM fos_user where email = '".$mail."'";
        $statement = $connexion->query($query);
        if($statement->fetch()){
        	return 1;
        }
        return 0;
		
    }
}
